{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/ImageApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchQuery","onSearchInputChange","e","setState","target","value","onSearchFromSubmit","onFormSubmit","props","preventDefault","trim","alert","this","className","onSubmit","type","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","src","largeImg","alt","height","width","ImageGallery","pictures","onImgClick","onClick","map","id","webformatURL","largeImageURL","axios","defaults","baseURL","serviceApi","getImages","query","page","perPage","get","then","r","data","hits","Button","onBtnClick","text","Modal","onKeydownClick","onCloseModal","code","window","addEventListener","removeEventListener","children","App","currentPictures","loader","openModal","OnLoadMore","prev","nodeName","dataset","img","toggleModal","loaderToggle","onImgOverviewClose","contains","fetchPictures","settings","ServiseApi","prevProps","prevState","length","scrollTo","top","document","documentElement","scrollHeight","behavior","color","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bab75d14.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    onFormSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    searchQuery: \"\",\n  };\n\n  onSearchInputChange = (e) => {\n    this.setState({\n      searchQuery: e.target.value,\n    });\n  };\n\n  onSearchFromSubmit = (e) => {\n    const { onFormSubmit } = this.props;\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === \"\") {\n      alert(\"input valid name\");\n      return;\n    }\n\n    onFormSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <div>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.onSearchFromSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              value={searchQuery}\n              onChange={this.onSearchInputChange}\n              placeholder=\"Search images and photos\"\n            />\n          </form>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ src, largeImg }) => (\n  <li className=\"ImageGalleryItem\">\n    <img\n      src={src}\n      alt=\"\"\n      className=\"ImageGalleryItem-image\"\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ pictures, onImgClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\n    {pictures.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem key={id} src={webformatURL} largeImg={largeImageURL} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nconst serviceApi = {\n  getImages({ query, page, perPage }) {\n    return axios\n      .get(\n        `/?q=${query}&key=21869034-2ecf67829261e86afc712c967&page=${page}&image_type=photo&orientation=horizontal&per_page=${perPage}`\n      )\n      .then((r) => r.data.hits);\n  },\n};\nexport default serviceApi;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ onBtnClick, text }) => (\n  <button type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onCloseModal: PropTypes.func,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.onKeydownClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.onKeydownClick);\n  }\n\n  onKeydownClick = (e) => {\n    const { onCloseModal } = this.props;\n    if (e.code === \"Escape\") {\n      onCloseModal();\n    }\n  };\n\n  render() {\n    const { children, onCloseModal } = this.props;\n    return (\n      <div className=\"Overlay\" onClick={onCloseModal}>\n        <div className=\"Modal\">{children}</div>\n      </div>\n    );\n  }\n}\n","import Searchbar from \"./components/Searchbar/Searchbar\";\nimport React, { Component } from \"react\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport ServiseApi from \"./service/ImageApi\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default class App extends Component {\n  state = {\n    query: \"\",\n    page: 1,\n    perPage: 12,\n    pictures: [],\n    currentPictures: \"\",\n    loader: false,\n    openModal: false,\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { query, page, pictures } = this.state;\n    if (prevState.query !== query || prevState.page !== page) {\n      this.fetchPictures().then(() => {\n        this.loaderToggle();\n        if (pictures.length > 10) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      });\n    }\n  }\n\n  OnLoadMore = () => {\n    this.setState((prev) => ({\n      page: prev.page + 1,\n    }));\n  };\n\n  onImgClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    this.setState({\n      currentPictures: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  loaderToggle = () => {\n    this.setState((prev) => ({\n      loader: !prev.loader,\n    }));\n  };\n\n  onImgOverviewClose = (e) => {\n    if (e.target.className.contains(\"Overlay\")) {\n      this.toggleModal();\n    }\n  };\n\n  fetchPictures = () => {\n    const { query, page, perPage } = this.state;\n\n    this.loaderToggle();\n    const settings = {\n      query: query,\n      page: page,\n      perPage: perPage,\n    };\n    return ServiseApi.getImages(settings).then((hits) => {\n      this.setState((prev) => ({\n        pictures: [...prev.pictures, ...hits],\n      }));\n    });\n  };\n\n  onSubmit = (searchQuery) => {\n    this.setState({\n      query: searchQuery,\n      page: 1,\n      pictures: [],\n    });\n  };\n  toggleModal = () => {\n    this.setState((prev) => ({\n      openModal: !prev.openModal,\n    }));\n  };\n  render() {\n    const { pictures, query, loader, openModal, currentPictures } = this.state;\n    return (\n      <div className=\"App\">\n        {loader && (\n          <Modal>\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={700} width={700} />\n          </Modal>\n        )}\n        <Searchbar value={query} onFormSubmit={this.onSubmit} />\n        <ImageGallery pictures={pictures} onImgClick={this.onImgClick} />\n        {pictures.length > 0 && (\n          <Button onBtnClick={this.OnLoadMore} text={loader ? \"Загружаем\" : \"Загрузить еще\"} />\n        )}\n\n        {openModal && (\n          <Modal onCloseModal={this.toggleModal}>\n            <img src={currentPictures} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}