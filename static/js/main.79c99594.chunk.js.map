{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","service/ImageApi.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onFormSubmit","useState","searchQuery","setSearchQuery","className","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","value","onChange","target","placeholder","ImageGalleryItem","src","largeImg","alt","height","width","ImageGallery","pictures","onImgClick","onClick","map","id","webformatURL","largeImageURL","axios","defaults","baseURL","serviceApi","getImages","query","page","perPage","get","then","r","data","hits","Button","onBtnClick","text","modalContainer","document","querySelector","Modal","onCloseModal","children","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","App","setQuery","setPage","setPictures","currentPictures","setCurrentPictures","loader","setLoader","openModal","setOpenModal","loaderToggle","prevState","fetchPictures","settings","ServiseApi","finally","toggleModal","color","nodeName","dataset","img","length","scrollTo","top","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79c99594.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Searchbar({ onFormSubmit }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const onSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const onSearchFromSubmit = (e) => {\n    e.preventDefault();\n    if (searchQuery.trim() === \"\") {\n      alert(\"input valid name\");\n      return;\n    }\n\n    onFormSubmit(searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <div>\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={onSearchFromSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={searchQuery}\n            onChange={onSearchInputChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    </div>\n  );\n}\n\nSearchbar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","const ImageGalleryItem = ({ src, largeImg }) => (\n  <li className=\"ImageGalleryItem\">\n    <img src={src} alt=\"\" className=\"ImageGalleryItem-image\" data-img={largeImg} height=\"240\" width=\"320\" />\n  </li>\n);\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ pictures, onImgClick }) => (\n  <ul className=\"ImageGallery\" onClick={onImgClick}>\n    {pictures.map(({ id, webformatURL, largeImageURL }) => (\n      <ImageGalleryItem key={id} src={webformatURL} largeImg={largeImageURL} />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nconst serviceApi = {\n  getImages({ query, page, perPage }) {\n    return axios\n      .get(\n        `/?q=${query}&key=21869034-2ecf67829261e86afc712c967&page=${page}&image_type=photo&orientation=horizontal&per_page=${perPage}`\n      )\n      .then((r) => r.data.hits);\n  },\n};\nexport default serviceApi;\n","import PropTypes from \"prop-types\";\n\nconst Button = ({ onBtnClick, text }) => (\n  <button type=\"button\" onClick={onBtnClick}>\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import { useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst modalContainer = document.querySelector(\"#modal-root\");\n\nfunction Modal({ onCloseModal, children }) {\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (e.code === \"Escape\") {\n        onCloseModal();\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onCloseModal]);\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={onCloseModal}>\n      <div className=\"Modal\">{children}</div>\n    </div>,\n    modalContainer\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Modal;\n","import { useState } from \"react\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport ServiseApi from \"./service/ImageApi\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [perPage] = useState(12);\n  const [pictures, setPictures] = useState([]);\n  const [currentPictures, setCurrentPictures] = useState([]);\n  const [loader, setLoader] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  const OnLoadMore = () => {\n    setPage((prevState) => prevState + 1);\n    if (query) {\n      fetchPictures()\n        .then(() => {\n          loaderToggle();\n          if (pictures.length > 10) {\n            window.scrollTo({\n              top: document.documentElement.scrollHeight,\n              behavior: \"smooth\",\n            });\n          }\n        })\n        .finally(() => loaderToggle());\n    }\n  };\n\n  const onImgClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    setCurrentPictures(e.target.dataset.img);\n\n    toggleModal();\n  };\n\n  const loaderToggle = () => {\n    setLoader((prevState) => !prevState);\n  };\n\n  const fetchPictures = () => {\n    loaderToggle();\n    const settings = {\n      query,\n      page,\n      perPage,\n    };\n    return ServiseApi.getImages(settings)\n      .then((hits) => setPictures((prevState) => [...prevState, ...hits]))\n      .finally(() => loaderToggle());\n  };\n\n  const onSubmit = (searchQuery) => {\n    setQuery(searchQuery);\n    setPage(1);\n    setPictures([]);\n\n    fetchPictures();\n  };\n\n  const toggleModal = () => {\n    setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <div className=\"App\">\n      {loader && (\n        <Modal>\n          <Loader type=\"Rings\" color=\"#00BFFF\" height={700} width={700} />\n        </Modal>\n      )}\n      <Searchbar value={query} onFormSubmit={onSubmit} />\n      <ImageGallery pictures={pictures} onImgClick={onImgClick} />\n      {pictures.length > 0 && (\n        <Button onBtnClick={OnLoadMore} text={loader ? \"Загружаем\" : \"Загрузить еще\"} />\n      )}\n\n      {openModal && (\n        <Modal onCloseModal={toggleModal}>\n          <img src={currentPictures} alt=\"Dont Worry Be Happy\" />\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}